

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 14 09:07:37 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009E                     	;# 
   343  009F                     	;# 
   344  0105                     	;# 
   345  0107                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  0185                     	;# 
   354  0187                     	;# 
   355  0188                     	;# 
   356  0189                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0006                     _PORTBbits	set	6
   360  0008                     _PORTDbits	set	8
   361  0005                     _PORTAbits	set	5
   362  0009                     _PORTEbits	set	9
   363  005F                     _GIE	set	95
   364  005D                     _TMR0IE	set	93
   365  0081                     _OPTION_REGbits	set	129
   366  0089                     _TRISEbits	set	137
   367  0085                     _TRISAbits	set	133
   368  0088                     _TRISDbits	set	136
   369  0086                     _TRISBbits	set	134
   370  040B                     _PSA	set	1035
   371  040D                     _T0CS	set	1037
   372  0189                     _ANSELH	set	393
   373  0188                     _ANSEL	set	392
   374                           
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  07F6                     start_initialization:	
   379  07F6                     __initialization:	
   380                           
   381                           ; Clear objects allocated to COMMON
   382  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   383  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   384  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   385  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   386  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   387  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   388  07FC                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391  07FC                     __end_of__initialization:	
   392  07FC  0183               	clrf	3
   393  07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396  0070                     __pbssCOMMON:	
   397  0070                     _tickCounter:	
   398  0070                     	ds	2
   399  0072                     _tickServo:	
   400  0072                     	ds	2
   401  0074                     _estadoComida:	
   402  0074                     	ds	1
   403  0075                     _estadoColor:	
   404  0075                     	ds	1
   405                           
   406                           	psect	cstackCOMMON
   407  0076                     __pcstackCOMMON:	
   408  0076                     ?_appInit:	
   409  0076                     ??_appInit:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0076                     ?_giraServo:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0076                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0076                     ?_tickRead:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0076                     	ds	2
   424  0078                     ??_tickRead:	
   425  0078                     tickRead@aux:	
   426                           ; 1 bytes @ 0x2
   427                           
   428                           
   429                           ; 2 bytes @ 0x2
   430  0078                     	ds	2
   431  007A                     ??_giraServo:	
   432                           
   433                           ; 1 bytes @ 0x4
   434  007A                     	ds	2
   435  007C                     ??_main:	
   436                           
   437                           	psect	maintext
   438  0771                     __pmaintext:	
   439                           ; 1 bytes @ 0x6
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 39 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : B00/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels required when called:    2
   465 ;; This function calls:
   466 ;;		_appInit
   467 ;;		_giraServo
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _main
   475  0771                     _main:	
   476  0771                     l849:	
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   479                           
   480                           
   481                           ;main.c: 40:     appInit();
   482  0771  120A  118A  278B  120A  118A  	fcall	_appInit
   483  0776                     l851:	
   484                           
   485                           ;main.c: 41:     PORTEbits.RE1 = 0;
   486  0776  1283               	bcf	3,5	;RP0=0, select bank0
   487  0777  1303               	bcf	3,6	;RP1=0, select bank0
   488  0778  1089               	bcf	9,1	;volatile
   489  0779                     l853:	
   490                           
   491                           ;main.c: 42:     PORTAbits.RA5 = 0;
   492  0779  1285               	bcf	5,5	;volatile
   493  077A                     l855:	
   494                           
   495                           ;main.c: 43:     PORTEbits.RE0 = 0;
   496  077A  1009               	bcf	9,0	;volatile
   497  077B                     l857:	
   498                           
   499                           ;main.c: 44:     PORTEbits.RE2 = 0;
   500  077B  1109               	bcf	9,2	;volatile
   501  077C                     l859:	
   502                           
   503                           ;main.c: 48:         if (!PORTDbits.RD7){
   504  077C  1283               	bcf	3,5	;RP0=0, select bank0
   505  077D  1303               	bcf	3,6	;RP1=0, select bank0
   506  077E  1B88               	btfsc	8,7	;volatile
   507  077F  2F81               	goto	u101
   508  0780  2F82               	goto	u100
   509  0781                     u101:	
   510  0781  2F7C               	goto	l859
   511  0782                     u100:	
   512  0782                     l861:	
   513                           
   514                           ;main.c: 49:             giraServo();
   515  0782  120A  118A  27AD  120A  118A  	fcall	_giraServo
   516  0787  2F7C               	goto	l859
   517  0788  120A  118A  2800   	ljmp	start
   518  078B                     __end_of_main:	
   519                           
   520                           	psect	text1
   521  07AD                     __ptext1:	
   522 ;; *************** function _giraServo *****************
   523 ;; Defined at:
   524 ;;		line 122 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          2       0       0       0       0
   541 ;;      Totals:         2       0       0       0       0
   542 ;;Total ram usage:        2 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    1
   545 ;; This function calls:
   546 ;;		_tickRead
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _giraServo
   554  07AD                     _giraServo:	
   555  07AD                     l841:	
   556                           ;incstack = 0
   557                           ; Regs used in _giraServo: [wreg+status,2+status,0+pclath+cstack]
   558                           
   559                           
   560                           ;main.c: 125:     tickServo = tickRead();
   561  07AD  120A  118A  2766  120A  118A  	fcall	_tickRead
   562  07B2  0877               	movf	?_tickRead+1,w
   563  07B3  00F3               	movwf	_tickServo+1
   564  07B4  0876               	movf	?_tickRead,w
   565  07B5  00F2               	movwf	_tickServo
   566                           
   567                           ;main.c: 126:     while(tickRead() - tickServo < 500){
   568  07B6  2FBB               	goto	l843
   569  07B7                     l62:	
   570                           
   571                           ;main.c: 128:         PORTEbits.RE2 = 1;
   572  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   573  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   574  07B9  1509               	bsf	9,2	;volatile
   575                           
   576                           ;main.c: 129:         PORTEbits.RE1 = 0;
   577  07BA  1089               	bcf	9,1	;volatile
   578  07BB                     l843:	
   579                           
   580                           ;main.c: 126:     while(tickRead() - tickServo < 500){
   581  07BB  120A  118A  2766  120A  118A  	fcall	_tickRead
   582  07C0  0872               	movf	_tickServo,w
   583  07C1  0276               	subwf	?_tickRead,w
   584  07C2  00FA               	movwf	??_giraServo
   585  07C3  0873               	movf	_tickServo+1,w
   586  07C4  1C03               	skipc
   587  07C5  0A73               	incf	_tickServo+1,w
   588  07C6  0277               	subwf	?_tickRead+1,w
   589  07C7  00FB               	movwf	??_giraServo+1
   590  07C8  3001               	movlw	1
   591  07C9  027B               	subwf	??_giraServo+1,w
   592  07CA  30F4               	movlw	244
   593  07CB  1903               	skipnz
   594  07CC  027A               	subwf	??_giraServo,w
   595  07CD  1C03               	skipc
   596  07CE  2FD0               	goto	u81
   597  07CF  2FD1               	goto	u80
   598  07D0                     u81:	
   599  07D0  2FB7               	goto	l62
   600  07D1                     u80:	
   601  07D1                     l845:	
   602                           
   603                           ;main.c: 131:     tickServo = tickRead();
   604  07D1  120A  118A  2766  120A  118A  	fcall	_tickRead
   605  07D6  0877               	movf	?_tickRead+1,w
   606  07D7  00F3               	movwf	_tickServo+1
   607  07D8  0876               	movf	?_tickRead,w
   608  07D9  00F2               	movwf	_tickServo
   609                           
   610                           ;main.c: 132:     while(tickRead() - tickServo < 250){
   611  07DA  2FDF               	goto	l847
   612  07DB                     l65:	
   613                           
   614                           ;main.c: 134:         PORTEbits.RE2 = 0;
   615  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   616  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   617  07DD  1109               	bcf	9,2	;volatile
   618                           
   619                           ;main.c: 135:         PORTEbits.RE1 = 1;
   620  07DE  1489               	bsf	9,1	;volatile
   621  07DF                     l847:	
   622                           
   623                           ;main.c: 132:     while(tickRead() - tickServo < 250){
   624  07DF  120A  118A  2766  120A  118A  	fcall	_tickRead
   625  07E4  0872               	movf	_tickServo,w
   626  07E5  0276               	subwf	?_tickRead,w
   627  07E6  00FA               	movwf	??_giraServo
   628  07E7  0873               	movf	_tickServo+1,w
   629  07E8  1C03               	skipc
   630  07E9  0A73               	incf	_tickServo+1,w
   631  07EA  0277               	subwf	?_tickRead+1,w
   632  07EB  00FB               	movwf	??_giraServo+1
   633  07EC  3000               	movlw	0
   634  07ED  027B               	subwf	??_giraServo+1,w
   635  07EE  30FA               	movlw	250
   636  07EF  1903               	skipnz
   637  07F0  027A               	subwf	??_giraServo,w
   638  07F1  1C03               	skipc
   639  07F2  2FF4               	goto	u91
   640  07F3  2FF5               	goto	u90
   641  07F4                     u91:	
   642  07F4  2FDB               	goto	l65
   643  07F5                     u90:	
   644  07F5                     l67:	
   645  07F5  0008               	return
   646  07F6                     __end_of_giraServo:	
   647                           
   648                           	psect	text2
   649  0766                     __ptext2:	
   650 ;; *************** function _tickRead *****************
   651 ;; Defined at:
   652 ;;		line 62 in file "tick.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  aux             2    2[COMMON] unsigned int 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  2    0[COMMON] unsigned int 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         2       0       0       0       0
   667 ;;      Locals:         2       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         4       0       0       0       0
   670 ;;Total ram usage:        4 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_giraServo
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _tickRead
   681  0766                     _tickRead:	
   682  0766                     l833:	
   683                           ;incstack = 0
   684                           ; Regs used in _tickRead: [wreg]
   685                           
   686                           
   687                           ;tick.c: 63:     tick_t aux;;tick.c: 64:     GIE = 0;
   688  0766  138B               	bcf	11,7	;volatile
   689  0767                     l835:	
   690                           
   691                           ;tick.c: 65:     aux = tickCounter;
   692  0767  0871               	movf	_tickCounter+1,w	;volatile
   693  0768  00F9               	movwf	tickRead@aux+1
   694  0769  0870               	movf	_tickCounter,w	;volatile
   695  076A  00F8               	movwf	tickRead@aux
   696  076B                     l837:	
   697                           
   698                           ;tick.c: 66:     GIE = 1;
   699  076B  178B               	bsf	11,7	;volatile
   700                           
   701                           ;tick.c: 67:     return aux;
   702  076C  0879               	movf	tickRead@aux+1,w
   703  076D  00F7               	movwf	?_tickRead+1
   704  076E  0878               	movf	tickRead@aux,w
   705  076F  00F6               	movwf	?_tickRead
   706  0770                     l112:	
   707  0770  0008               	return
   708  0771                     __end_of_tickRead:	
   709                           
   710                           	psect	text3
   711  078B                     __ptext3:	
   712 ;; *************** function _appInit *****************
   713 ;; Defined at:
   714 ;;		line 14 in file "user.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          2       0       0       0       0
   731 ;;      Totals:         2       0       0       0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _appInit
   743  078B                     _appInit:	
   744  078B                     l715:	
   745                           ;incstack = 0
   746                           ; Regs used in _appInit: [wreg+status,2]
   747                           
   748                           
   749                           ;user.c: 16:     ANSEL = 0;
   750  078B  1683               	bsf	3,5	;RP0=1, select bank3
   751  078C  1703               	bsf	3,6	;RP1=1, select bank3
   752  078D  0188               	clrf	8	;volatile
   753                           
   754                           ;user.c: 17:     ANSELH = 0;
   755  078E  0189               	clrf	9	;volatile
   756  078F                     l717:	
   757                           
   758                           ;user.c: 19:     TRISBbits.TRISB0 = 1;
   759  078F  1683               	bsf	3,5	;RP0=1, select bank1
   760  0790  1303               	bcf	3,6	;RP1=0, select bank1
   761  0791  1406               	bsf	6,0	;volatile
   762  0792                     l719:	
   763                           
   764                           ;user.c: 20:     TRISDbits.TRISD7 = 1;
   765  0792  1788               	bsf	8,7	;volatile
   766  0793                     l721:	
   767                           
   768                           ;user.c: 21:     TRISDbits.TRISD6 = 1;
   769  0793  1708               	bsf	8,6	;volatile
   770  0794                     l723:	
   771                           
   772                           ;user.c: 22:     TRISDbits.TRISD5 = 1;
   773  0794  1688               	bsf	8,5	;volatile
   774  0795                     l725:	
   775                           
   776                           ;user.c: 24:     TRISAbits.TRISA2 = 1;
   777  0795  1505               	bsf	5,2	;volatile
   778  0796                     l727:	
   779                           
   780                           ;user.c: 25:     TRISAbits.TRISA3 = 1;
   781  0796  1585               	bsf	5,3	;volatile
   782  0797                     l729:	
   783                           
   784                           ;user.c: 26:     TRISAbits.TRISA4 = 1;
   785  0797  1605               	bsf	5,4	;volatile
   786  0798                     l731:	
   787                           
   788                           ;user.c: 28:     TRISDbits.TRISD0 = 1;
   789  0798  1408               	bsf	8,0	;volatile
   790  0799                     l733:	
   791                           
   792                           ;user.c: 29:     TRISDbits.TRISD1 = 1;
   793  0799  1488               	bsf	8,1	;volatile
   794  079A                     l735:	
   795                           
   796                           ;user.c: 30:     TRISDbits.TRISD2 = 1;
   797  079A  1508               	bsf	8,2	;volatile
   798  079B                     l737:	
   799                           
   800                           ;user.c: 32:     TRISBbits.TRISB2 = 1;
   801  079B  1506               	bsf	6,2	;volatile
   802  079C                     l739:	
   803                           
   804                           ;user.c: 34:     TRISEbits.TRISE2 = 0;
   805  079C  1109               	bcf	9,2	;volatile
   806  079D                     l741:	
   807                           
   808                           ;user.c: 35:     TRISEbits.TRISE1 = 0;
   809  079D  1089               	bcf	9,1	;volatile
   810  079E                     l743:	
   811                           
   812                           ;user.c: 36:     TRISEbits.TRISE0 = 0;
   813  079E  1009               	bcf	9,0	;volatile
   814  079F                     l745:	
   815                           
   816                           ;user.c: 37:     TRISAbits.TRISA5 = 0;
   817  079F  1285               	bcf	5,5	;volatile
   818  07A0                     l747:	
   819                           
   820                           ;user.c: 39:     TRISBbits.TRISB1 = 0;
   821  07A0  1086               	bcf	6,1	;volatile
   822  07A1                     l749:	
   823                           
   824                           ;user.c: 41:     _delay((unsigned long)((100)*(4000000L/4000.0)));
   825  07A1  3082               	movlw	130
   826  07A2  00F7               	movwf	??_appInit+1
   827  07A3  30DD               	movlw	221
   828  07A4  00F6               	movwf	??_appInit
   829  07A5                     u117:	
   830  07A5  0BF6               	decfsz	??_appInit,f
   831  07A6  2FA5               	goto	u117
   832  07A7  0BF7               	decfsz	??_appInit+1,f
   833  07A8  2FA5               	goto	u117
   834  07A9  2FAA               	nop2
   835  07AA                     l751:	
   836                           
   837                           ;user.c: 44:     TMR0IE = 1;
   838  07AA  168B               	bsf	11,5	;volatile
   839  07AB                     l753:	
   840                           
   841                           ;user.c: 46:     GIE = 1;
   842  07AB  178B               	bsf	11,7	;volatile
   843  07AC                     l94:	
   844  07AC  0008               	return
   845  07AD                     __end_of_appInit:	
   846  007E                     btemp	set	126	;btemp
   847  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_giraServo
    _giraServo->_tickRead

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      23
                            _appInit
                          _giraServo
 ---------------------------------------------------------------------------------
 (1) _giraServo                                            2     2      0      23
                                              4 COMMON     2     2      0
                           _tickRead
 ---------------------------------------------------------------------------------
 (2) _tickRead                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _appInit                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appInit
   _giraServo
     _tickRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 14 09:07:37 2022

            __CFG_CP$OFF 0000                       l62 07B7                       l65 07DB  
                     l67 07F5                       l94 07AC                       u80 07D1  
                     u81 07D0                       u90 07F5                       u91 07F4  
                    l112 0770                      l721 0793                      l731 0798  
                    l723 0794                      l715 078B                      l741 079D  
                    l733 0799                      l725 0795                      l717 078F  
                    l751 07AA                      l743 079E                      l735 079A  
                    l727 0796                      l719 0792                      l753 07AB  
                    l745 079F                      l737 079B                      l729 0797  
                    l833 0766                      l841 07AD                      l747 07A0  
                    l739 079C                      l835 0767                      l843 07BB  
                    l851 0776                      l749 07A1                      l837 076B  
                    l845 07D1                      l861 0782                      l853 0779  
                    l847 07DF                      l855 077A                      l857 077B  
                    l849 0771                      l859 077C                      _GIE 005F  
                    u100 0782                      u101 0781                      u117 07A5  
           __CFG_CPD$OFF 0000                      _PSA 040B             __CFG_IESO$ON 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     _T0CS 040D  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0771  
                   btemp 007E                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0076            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
        __end_of_appInit 07AD           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E          __initialization 07F6             __end_of_main 078B  
                 ??_main 007C                   _ANSELH 0189                   _TMR0IE 005D  
         __CFG_PWRTE$OFF 0000                ??_appInit 0076         __end_of_tickRead 0771  
__end_of__initialization 07FC           __pcstackCOMMON 0076           _OPTION_REGbits 0081  
     __size_of_giraServo 0049               __pmaintext 0771              tickRead@aux 0078  
              ?_tickRead 0076        __end_of_giraServo 07F6                  _appInit 078B  
                __ptext1 07AD                  __ptext2 0766                  __ptext3 078B  
   end_of_initialization 07FC               ??_tickRead 0078                _PORTAbits 0005  
              _PORTBbits 0006                _PORTDbits 0008                _PORTEbits 0009  
              _TRISAbits 0085                _TRISBbits 0086                _TRISDbits 0088  
              _TRISEbits 0089      start_initialization 07F6             _estadoComida 0074  
            __pbssCOMMON 0070                ___latbits 0002        __size_of_tickRead 000B  
               ?_appInit 0076                _giraServo 07AD                _tickServo 0072  
             ?_giraServo 0076              _estadoColor 0075         __size_of_appInit 0022  
      __CFG_BOR4V$BOR21V 0000            __size_of_main 001A                 _tickRead 0766  
            ??_giraServo 007A              _tickCounter 0070  
